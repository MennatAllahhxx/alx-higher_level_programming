The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------

Importing the function from the module:
	>>> say_my_name = __import__("3-say_my_name").say_my_name

Checking for module docstring:
	>>> m = __import__("3-say_my_name").__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__("3-say_my_name").say_my_name.__doc__
	>>> len(f) > 1
	True

Checking regular name:
	>>> say_my_name("John", "Smith")
	My name is John Smith

Checking regular name again:
	>>> say_my_name("Walter", "White")
	My name is Walter White

Checking only first name:
	>>> say_my_name("Bob")
	My name is Bob 

Checking first name as an int:
	>>> say_my_name(12, "White")
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string

Checking last name as an array:
	>>> say_my_name("Walter", ['W', 'h', 'i', 't', 'e'])
	Traceback (most recent call last):
	...
	TypeError: last_name must be a string

Checking wrong types for first name and last name:
	>>> say_my_name(12, ['W', 'h', 'i', 't', 'e'])
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string

Checking for number of arguments:
        >>> say_my_name("Walter", "White", "heisenberg")
        Traceback (most recent call last):
        ...
        TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given
